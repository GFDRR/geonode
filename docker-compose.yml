version: '2'

services:

  database:
    image: camptocamp/postgis:9.5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:5.2
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:3.6
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  django:
    image: camptocamp/geonode_django
    build: .
    links:
      - database
      - elasticsearch
      - rabbitmq
    command: django-admin.py runserver 0.0.0.0:8000 --settings=geonode.settings
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=geonode.settings
      - ALLOWED_HOSTS='[''localhost'']'
      - C_FORCE_ROOT=1
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - DB_HOST=database
      - DB_PORT=5432
      - DB_ADMIN_USER=postgres
      - DB_ADMIN_PASSWORD=secret
      - DB_GEONODE_NAME=geonode
      - DB_GEONODE_USER=geonode
      - DB_GEONODE_PASSWORD=secret
      - DB_GEOSERVER_NAME=geoserver
      - DB_GEOSERVER_USER=geoserver
      - DB_GEOSERVER_PASSWORD=secret

  celery:
    image: camptocamp/geonode_django
    links:
      - rabbitmq
      - database
      - elasticsearch
    entrypoint: celery
    command:
      - worker
      - --app=geonode.celery_app:app
      - --broker=amqp://guest:guest@rabbitmq:5672/
      - -B
      - -l
      - DEBUG
      - -E
    env_file:
      - ./scripts/docker/env/production/django.env

  geoserver:
    image: camptocamp/geonode_geoserver
    links:
      - database
      - django
    ports:
      - "8080:8080"
    volumes:
      - geoserver_datadir:/mnt/geoserver_datadir

volumes:
  rabbitmq_data:
  elasticsearch_data:
  geoserver_datadir:
  geoserver_data:
  postgresql_data:
