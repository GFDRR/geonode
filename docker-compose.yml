version: '2'

services:

  postgres:
    image: postgres:9.4
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:5.2
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:3.6
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  django:
    image: camptocamp/geonode_django
    build: .
    links:
      - postgres
      - elasticsearch
      - rabbitmq
    command: django-admin.py runserver 0.0.0.0:8000 --settings=geonode.settings
    env_file:
      - ./scripts/docker/env/production/django.env

  celery:
    image: camptocamp/geonode_django
    links:
      - rabbitmq
      - postgres
      - elasticsearch
    command: celery worker --app=geonode.celery_app:app -B -l INFO
    env_file:
      - ./scripts/docker/env/production/django.env

  consumers:
    image: geonode/django
    links:
      - rabbitmq
      - postgres
      - elasticsearch
    command: python manage.py runmessaging
    env_file:
      - ./scripts/docker/env/production/django.env

  geoserver:
    image: camptocamp/geonode_geoserver
    links:
      - postgres
      - django
    ports:
      - "8080:8080"
    volumes:
      - geoserver_datadir:/usr/local/tomcat/webapps/geoserver/data

  nginx:
    image: camptocamp/geonode_nginx
    links:
      - django
    ports:
      - "80:80"

volumes:
  rabbitmq_data:
  elasticsearch_data:
  geoserver_datadir:
  geoserver_data:
  postgresql_data:
